package net.barbux.creatures2d;

import static org.mockito.AdditionalMatchers.or;
import static org.mockito.Matchers.anyDouble;
import static org.mockito.Matchers.isA;
import static org.mockito.Matchers.isNull;
import static org.powermock.api.mockito.PowerMockito.mockStatic;

import com.diffblue.deeptestutils.Reflector;
import com.diffblue.deeptestutils.mock.DTUMemberMatcher;
import net.barbux.creatures2d.Creature.Bone;
import net.barbux.creatures2d.Creature.Muscle;
import net.barbux.creatures2d.Creature.Node;
import net.barbux.creatures2d.Creature.NodeList;
import net.barbux.creatures2d.Creature;
import net.barbux.creatures2d.Geometry.Vector;
import net.barbux.creatures2d.Physics;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.function.Predicate;
import java.util.function.Supplier;
import java.util.stream.Stream;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;

@RunWith(PowerMockRunner.class)
public class CreatureTest {

  @Test
  public void cloneOutputNotNull() throws InvocationTargetException {
    final Node creatureNode = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 3.0;
    vector.x = 2.0;
    Reflector.setField(creatureNode, "originalPos", vector);
    creatureNode.nodeId = 2;
    creatureNode.color = null;
    Reflector.setField(creatureNode, "v", null);
    Reflector.setField(creatureNode, "weight", 2.0);
    Reflector.setField(creatureNode, "size", 2.0);
    Reflector.setField(creatureNode, "p", null);
    final Node actual = creatureNode.clone();
    Assert.assertNotNull(actual);
    Assert.assertNotNull(actual.originalPos);
    Assert.assertEquals(3.0, actual.originalPos.y, 0.0);
    Assert.assertEquals(2.0, actual.originalPos.x, 0.0);
    Assert.assertEquals(0, actual.nodeId);
    Assert.assertNull(actual.color);
    Assert.assertNotNull(actual.v);
    Assert.assertEquals(0.0, actual.v.y, 0.0);
    Assert.assertEquals(0.0, actual.v.x, 0.0);
    Assert.assertEquals(2.0, actual.weight, 0.0);
    Assert.assertEquals(2.0, actual.size, 0.0);
    Assert.assertNotNull(actual.p);
    Assert.assertEquals(3.0, actual.p.y, 0.0);
    Assert.assertEquals(2.0, actual.p.x, 0.0);
  }

  @Test
  public void cloneOutputNotNull1() throws InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 32;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node.color = color;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 512.0;
    vector1.x = 2.0;
    Reflector.setField(node, "v", vector1);
    Reflector.setField(node, "weight", 256.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 16.0;
    vector2.x = 2.0;
    Reflector.setField(node, "p", vector2);
    arrayList1.add(node);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final Creature actual = creature.clone();
    Assert.assertNotNull(actual);
    final ArrayList<Creature.Bone> arrayList3 = new ArrayList<Creature.Bone>();
    Assert.assertEquals(arrayList3, actual.allBones);
    Assert.assertNotNull(actual.allNodes);
    Assert.assertNull(actual.physics);
    Assert.assertEquals(0.0, actual.maxReached, 0.0);
    final ArrayList<Creature.Muscle> arrayList4 = new ArrayList<Creature.Muscle>();
    Assert.assertEquals(arrayList4, actual.allMuscles);
    Assert.assertEquals(0, actual.creatureId);
  }

  @PrepareForTest(fullyQualifiedNames = {"net.barbux.creatures2d.Creature$Muscle"}, value = Math.class)
  @Test
  public void setExpectedLengthInputPositiveOutputVoid() throws Exception, InvocationTargetException {

    PowerMockito.mockStatic(Math.class);
    final Creature.Muscle creatureMuscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    creatureMuscle.power = 2.0;
    creatureMuscle.maxLength = 159.0;
    creatureMuscle.period = 1024.0;
    creatureMuscle.minLength = 31.0;
    creatureMuscle.expectedLength = 0.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 19.0;
    vector.x = 343.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 0;
    node.color = null;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 0.0;
    vector1.x = 0.0;
    Reflector.setField(node, "v", vector1);
    Reflector.setField(node, "weight", 1.0);
    Reflector.setField(node, "size", 0.05);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 19.0;
    vector2.x = 343.0;
    Reflector.setField(node, "p", vector2);
    Reflector.setField(creatureMuscle, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 19.0;
    vector3.x = 248.0;
    Reflector.setField(node1, "originalPos", vector3);
    node1.nodeId = 0;
    node1.color = null;
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 0.0;
    vector4.x = 0.0;
    Reflector.setField(node1, "v", vector4);
    Reflector.setField(node1, "weight", 1.0);
    Reflector.setField(node1, "size", 0.05);
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 19.0;
    vector5.x = 248.0;
    Reflector.setField(node1, "p", vector5);
    Reflector.setField(creatureMuscle, "node2", node1);
    final double time = 111.0;
    PowerMockito.when(Math.sin(anyDouble())).thenReturn(128.0);
    creatureMuscle.setExpectedLength(time);
    Assert.assertEquals(8238.5, creatureMuscle.expectedLength, 0.0);
  }

  @Test
  public void setExpectedLengthInputPositiveOutputVoid1() {
    final Node creature$Node = new Node(2.0, 2.0);
    final Node creature$Node1 = new Node(2.0, 2.0);
    final Creature.Bone creatureBone = new Creature.Bone(creature$Node, creature$Node1);
    creatureBone.setExpectedLength(2.0);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(fullyQualifiedNames = {"net.barbux.creatures2d.Creature$Muscle"}, value = Math.class)
  @Test
  public void setExpectedLengthInputPositiveOutputVoid2() throws Exception, InvocationTargetException {

    PowerMockito.mockStatic(Math.class);
    final Creature.Muscle creatureMuscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    creatureMuscle.power = 2.0;
    creatureMuscle.maxLength = 15.0;
    creatureMuscle.period = 95.0;
    creatureMuscle.minLength = 160.0;
    creatureMuscle.expectedLength = 0.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 0;
    node.color = null;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 0.0;
    vector1.x = 0.0;
    Reflector.setField(node, "v", vector1);
    Reflector.setField(node, "weight", 1.0);
    Reflector.setField(node, "size", 0.05);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node, "p", vector2);
    Reflector.setField(creatureMuscle, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 2.0;
    Reflector.setField(node1, "originalPos", vector3);
    node1.nodeId = 0;
    node1.color = null;
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 0.0;
    vector4.x = 0.0;
    Reflector.setField(node1, "v", vector4);
    Reflector.setField(node1, "weight", 1.0);
    Reflector.setField(node1, "size", 0.05);
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 2.0;
    vector5.x = 2.0;
    Reflector.setField(node1, "p", vector5);
    Reflector.setField(creatureMuscle, "node2", node1);
    final double time = 200.0;
    PowerMockito.when(Math.sin(anyDouble())).thenReturn(496.0);
    creatureMuscle.setExpectedLength(time);
    Assert.assertEquals(-35720.0, creatureMuscle.expectedLength, 0.0);
  }

  @Test
  public void cloneOutputNotNull2() throws InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 2.0;
    muscle.maxLength = 2.0;
    muscle.period = 2.0;
    muscle.minLength = 2.0;
    muscle.expectedLength = 2.0;
    Reflector.setField(muscle, "node1", null);
    Reflector.setField(muscle, "node2", null);
    arrayList2.add(muscle);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final Creature actual = creature.clone();
    Assert.assertNotNull(actual);
    final ArrayList<Creature.Bone> arrayList3 = new ArrayList<Creature.Bone>();
    Assert.assertEquals(arrayList3, actual.allBones);
    Assert.assertNotNull(actual.allNodes);
    Assert.assertNull(actual.physics);
    Assert.assertEquals(0.0, actual.maxReached, 0.0);
    Assert.assertNotNull(actual.allMuscles);
    Assert.assertEquals(1, actual.allMuscles.size());
    Assert.assertNotNull(actual.allMuscles.get(0));
    Assert.assertEquals(2.0, ((Creature.Muscle) actual.allMuscles.get(0)).power, 0.0);
    Assert.assertEquals(2.0, ((Creature.Muscle) actual.allMuscles.get(0)).maxLength, 0.0);
    Assert.assertEquals(2.0, ((Creature.Muscle) actual.allMuscles.get(0)).period, 0.0);
    Assert.assertEquals(2.0, ((Creature.Muscle) actual.allMuscles.get(0)).minLength, 0.0);
    Assert.assertEquals(0.0, ((Creature.Muscle) actual.allMuscles.get(0)).expectedLength, 0.0);
    Assert.assertNull(((Creature.Muscle) actual.allMuscles.get(0)).node1);
    Assert.assertNull(((Creature.Muscle) actual.allMuscles.get(0)).node2);
    Assert.assertEquals(0, actual.creatureId);
  }

  @Test
  public void cloneOutputNotNull3() throws InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final Creature actual = creature.clone();
    Assert.assertNotNull(actual);
    final ArrayList<Creature.Bone> arrayList3 = new ArrayList<Creature.Bone>();
    Assert.assertEquals(arrayList3, actual.allBones);
    Assert.assertNotNull(actual.allNodes);
    Assert.assertNull(actual.physics);
    Assert.assertEquals(0.0, actual.maxReached, 0.0);
    final ArrayList<Creature.Muscle> arrayList4 = new ArrayList<Creature.Muscle>();
    Assert.assertEquals(arrayList4, actual.allMuscles);
    Assert.assertEquals(0, actual.creatureId);
  }

  @Test
  public void constructorInputNotNullOutputVoid() {
    final Creature this$0 = new Creature();
    Reflector.setField(this$0, "allBones", null);
    Reflector.setField(this$0, "allNodes", null);
    this$0.physics = null;
    this$0.maxReached = 0.0;
    Reflector.setField(this$0, "allMuscles", null);
    this$0.creatureId = 0;
    final Creature.NodeList actual = this$0.new NodeList();
  }

  @Test
  public void iteratorOutputNotNull() {
    final Creature creature = new Creature();
    final Creature.NodeList creatureNodeList = creature.new NodeList();
    final Iterator<Node> actual = creatureNodeList.iterator();
    Assert.assertNotNull(actual);
  }

  @PrepareForTest(fullyQualifiedNames = {"net.barbux.creatures2d.Creature$NodeList"}, value = {ArrayList.class, Creature.class})
  @Test
  public void removeIfInputNullOutputFalse() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Object[] objectArray = { null, null, null, null, null, null, null, null, null, null };
    Reflector.setField(arrayList, "elementData", objectArray);
    Reflector.setField(arrayList, "size", 0);
    Reflector.setField(arrayList, "modCount", 0);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", creature);
    final ArrayList arrayList1 = new ArrayList();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 0.0;
    final ArrayList arrayList2 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList2.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Object[] objectArray1 = { null, null, null, null, null, null, null, null, null, null };
    Reflector.setField(arrayList2, "elementData", objectArray1);
    Reflector.setField(arrayList2, "size", 0);
    Reflector.setField(arrayList2, "modCount", 0);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 0;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList arrayList3 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList3.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Object[] objectArray2 = { null, null, null, null, null, null, null, null, null, null };
    Reflector.setField(arrayList3, "elementData", objectArray2);
    Reflector.setField(arrayList3, "size", 0);
    Reflector.setField(arrayList3, "modCount", 0);
    Reflector.setField(creatureNodeList, "internal", arrayList3);
    final Predicate predicate = null;
    PowerMockito.whenNew(ArrayList.class).withNoArguments().thenReturn(arrayList).thenReturn(arrayList2).thenReturn(arrayList3);
    final boolean actual = creatureNodeList.removeIf(predicate);
    Assert.assertFalse(actual);
  }

  @Test
  public void resizeBonesOutputVoid() {
    final Creature creature = new Creature();
    creature.resizeBones();

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeInputPositiveOutputNull() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 3);
    Reflector.setField(arrayList, "modCount", 3);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null, null, null, null, null, null, null, null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 2);
    Reflector.setField(arrayList1, "modCount", 2);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList<Node> arrayList2 = new ArrayList<Node>();
    arrayList2.add(null);
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 1012;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    Reflector.setField(node, "p", null);
    arrayList2.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 64;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    Reflector.setField(node1, "p", null);
    arrayList2.add(node1);
    arrayList2.add(null);
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 16;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    Reflector.setField(node2, "p", null);
    arrayList2.add(node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 16;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node3, "p", vector);
    arrayList2.add(node3);
    final Node node4 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node4, "originalPos", null);
    node4.nodeId = 16;
    node4.color = null;
    Reflector.setField(node4, "v", null);
    Reflector.setField(node4, "weight", 2.0);
    Reflector.setField(node4, "size", 2.0);
    Reflector.setField(node4, "p", null);
    arrayList2.add(node4);
    final Node node5 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node5, "originalPos", null);
    node5.nodeId = 8;
    node5.color = null;
    Reflector.setField(node5, "v", null);
    Reflector.setField(node5, "weight", 4.0);
    Reflector.setField(node5, "size", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node5, "p", null);
    arrayList2.add(node5);
    final Node node6 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node6, "originalPos", null);
    node6.nodeId = 5;
    node6.color = null;
    Reflector.setField(node6, "v", null);
    Reflector.setField(node6, "weight", 512.0);
    Reflector.setField(node6, "size", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node6, "p", null);
    arrayList2.add(node6);
    final Node node7 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node7, "originalPos", null);
    node7.nodeId = 2;
    node7.color = null;
    Reflector.setField(node7, "v", null);
    Reflector.setField(node7, "weight", 2.0);
    Reflector.setField(node7, "size", 2.0);
    Reflector.setField(node7, "p", null);
    arrayList2.add(node7);
    final Node node8 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node8, "originalPos", null);
    node8.nodeId = 1008;
    node8.color = null;
    Reflector.setField(node8, "v", null);
    Reflector.setField(node8, "weight", 2.0);
    Reflector.setField(node8, "size", 2.0);
    Reflector.setField(node8, "p", null);
    arrayList2.add(node8);
    final Node node9 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node9, "originalPos", null);
    node9.nodeId = 16;
    node9.color = null;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node9, "v", vector1);
    Reflector.setField(node9, "weight", 2.0);
    Reflector.setField(node9, "size", 2.0);
    Reflector.setField(node9, "p", null);
    arrayList2.add(node9);
    final Node node10 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node10, "originalPos", null);
    node10.nodeId = 16;
    node10.color = null;
    Reflector.setField(node10, "v", null);
    Reflector.setField(node10, "weight", 2.0);
    Reflector.setField(node10, "size", 2.0);
    Reflector.setField(node10, "p", null);
    arrayList2.add(node10);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final int index = 3;
    final Node actual = creatureNodeList.remove(index);
    Assert.assertNull(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeInputPositiveOutputNull1() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 3);
    Reflector.setField(arrayList, "modCount", 3);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 3);
    Reflector.setField(arrayList1, "modCount", 3);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList<Node> arrayList2 = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 511;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 512.0);
    Reflector.setField(node, "size", 2.0);
    Reflector.setField(node, "p", null);
    arrayList2.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    Reflector.setField(node1, "p", null);
    arrayList2.add(node1);
    arrayList2.add(null);
    arrayList2.add(null);
    arrayList2.add(null);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final int index = 4;
    final Node actual = creatureNodeList.remove(index);
    Assert.assertNull(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeInputPositiveOutputNull2() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 3);
    Reflector.setField(arrayList, "modCount", 3);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 3);
    Reflector.setField(arrayList1, "modCount", 3);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList<Node> arrayList2 = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 5;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 512.0);
    Reflector.setField(node, "size", 2.0);
    Reflector.setField(node, "p", null);
    arrayList2.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    Reflector.setField(node1, "p", null);
    arrayList2.add(node1);
    arrayList2.add(null);
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 504;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    Reflector.setField(node2, "p", null);
    arrayList2.add(node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 2;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    Reflector.setField(node3, "p", null);
    arrayList2.add(node3);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final int index = 2;
    final Node actual = creatureNodeList.remove(index);
    Assert.assertNull(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeInputPositiveOutputNull3() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 2);
    Reflector.setField(arrayList, "modCount", 2);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 3);
    Reflector.setField(arrayList1, "modCount", 3);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList<Node> arrayList2 = new ArrayList<Node>();
    arrayList2.add(null);
    arrayList2.add(null);
    arrayList2.add(null);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final int index = 2;
    final Node actual = creatureNodeList.remove(index);
    Assert.assertNull(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeIfInputNotNullOutputFalse() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    Reflector.setField(arrayList, "modCount", 2);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    Reflector.setField(arrayList1, "modCount", 2);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList arrayList2 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList2.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    Reflector.setField(arrayList2, "modCount", 2);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final Predicate predicate = (Predicate) Reflector.getInstance("java.util.function.Predicate");
    final boolean actual = creatureNodeList.removeIf(predicate);
    Assert.assertFalse(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeIfInputNullOutputFalse1() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 2);
    Reflector.setField(arrayList, "modCount", 2);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 2);
    Reflector.setField(arrayList1, "modCount", 2);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList arrayList2 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList2.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Node[] nodeArray = { null, null };
    Reflector.setField(arrayList2, "elementData", nodeArray);
    Reflector.setField(arrayList2, "size", 2);
    Reflector.setField(arrayList2, "modCount", 2);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final Predicate predicate = null;
    final boolean actual = creatureNodeList.removeIf(predicate);
    Assert.assertFalse(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeIfInputNullOutputFalse2() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    Reflector.setField(arrayList, "modCount", 2);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    Reflector.setField(arrayList1, "modCount", 2);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList arrayList2 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList2.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    Reflector.setField(arrayList2, "modCount", 2);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final Predicate predicate = null;
    final boolean actual = creatureNodeList.removeIf(predicate);
    Assert.assertFalse(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeIfInputNullOutputFalse3() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 3);
    Reflector.setField(arrayList, "modCount", 3);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 3);
    Reflector.setField(arrayList1, "modCount", 3);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList arrayList2 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList2.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Node[] nodeArray = { null, null, null };
    Reflector.setField(arrayList2, "elementData", nodeArray);
    Reflector.setField(arrayList2, "size", 3);
    Reflector.setField(arrayList2, "modCount", 3);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final Predicate predicate = null;
    final boolean actual = creatureNodeList.removeIf(predicate);
    Assert.assertFalse(actual);
  }

  @PrepareForTest(ArrayList.class)
  @Test
  public void removeIfInputNullOutputFalse4() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    final Creature creature = new Creature();
    final ArrayList arrayList = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Bone[] boneArray = { null, null, null };
    Reflector.setField(arrayList, "elementData", boneArray);
    Reflector.setField(arrayList, "size", 3);
    Reflector.setField(arrayList, "modCount", 3);
    Reflector.setField(creature, "allBones", arrayList);
    Reflector.setField(creature, "allNodes", null);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList arrayList1 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList1.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Creature.Muscle[] muscleArray = { null, null, null };
    Reflector.setField(arrayList1, "elementData", muscleArray);
    Reflector.setField(arrayList1, "size", 3);
    Reflector.setField(arrayList1, "modCount", 3);
    Reflector.setField(creature, "allMuscles", arrayList1);
    creature.creatureId = 2;
    Reflector.setField(creatureNodeList, "this$0", creature);
    final ArrayList arrayList2 = PowerMockito.mock(ArrayList.class);
    PowerMockito.when(arrayList2.removeIf(or(isA(Predicate.class), isNull(Predicate.class)))).thenReturn(false);
    final Node[] nodeArray = { null, null };
    Reflector.setField(arrayList2, "elementData", nodeArray);
    Reflector.setField(arrayList2, "size", 2);
    Reflector.setField(arrayList2, "modCount", 2);
    Reflector.setField(creatureNodeList, "internal", arrayList2);
    final Predicate predicate = null;
    final boolean actual = creatureNodeList.removeIf(predicate);
    Assert.assertFalse(actual);
  }

  @Test
  public void getInputPositiveOutputNotNull() throws InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    arrayList.add(null);
    arrayList.add(null);
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    Reflector.setField(node, "p", null);
    arrayList.add(node);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    final Node actual = creatureNodeList.get(2);
    Assert.assertNotNull(actual);
    Assert.assertNull(actual.originalPos);
    Assert.assertEquals(2, actual.nodeId);
    Assert.assertNull(actual.color);
    Assert.assertNull(actual.v);
    Assert.assertEquals(2.0, actual.weight, 0.0);
    Assert.assertEquals(2.0, actual.size, 0.0);
    Assert.assertNull(actual.p);
  }

  @Test
  public void getInputPositiveOutputNotNull1() throws InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    arrayList.add(null);
    arrayList.add(null);
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node, "p", null);
    arrayList.add(node);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    final Node actual = creatureNodeList.get(2);
    Assert.assertNotNull(actual);
    Assert.assertNull(actual.originalPos);
    Assert.assertEquals(2, actual.nodeId);
    Assert.assertNull(actual.color);
    Assert.assertNull(actual.v);
    Assert.assertEquals(2.0, actual.weight, 0.0);
    Assert.assertEquals(0x1.0000000000001p+1 /* 2.0 */, actual.size, 0.0);
    Assert.assertNull(actual.p);
  }

  @Test
  public void getInputPositiveOutputNotNull2() throws InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node.color = color;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    Reflector.setField(node, "p", null);
    arrayList.add(node);
    arrayList.add(null);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    final Color color1 = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node1.color = color1;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    Reflector.setField(node1, "p", null);
    arrayList.add(node1);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    final Node actual = creatureNodeList.get(2);
    Assert.assertNotNull(actual);
    Assert.assertNull(actual.originalPos);
    Assert.assertEquals(2, actual.nodeId);
    Assert.assertNotNull(actual.color);
    Assert.assertNull(actual.v);
    Assert.assertEquals(2.0, actual.weight, 0.0);
    Assert.assertEquals(2.0, actual.size, 0.0);
    Assert.assertNull(actual.p);
  }

  @Test
  public void getInputPositiveOutputNull() throws InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    arrayList.add(null);
    arrayList.add(null);
    arrayList.add(null);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    Assert.assertNull(creatureNodeList.get(2));
  }

  @Test
  public void getInputPositiveOutputNull1() throws InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    arrayList.add(null);
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node.color = color;
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "v", vector);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 512.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node, "p", vector1);
    arrayList.add(node);
    arrayList.add(null);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    Assert.assertNull(creatureNodeList.get(2));
  }

  @Test
  public void getInputPositiveOutputNull2() throws InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    arrayList.add(null);
    arrayList.add(null);
    arrayList.add(null);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    Assert.assertNull(creatureNodeList.get(2));
  }

  @PrepareForTest(fullyQualifiedNames = {"net.barbux.creatures2d.Creature$NodeList"}, value = {AbstractList.class, ArrayList.class})
  @Test
  public void streamOutputNotNull() throws Exception, InvocationTargetException {
    final Creature.NodeList creatureNodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(creatureNodeList, "this$0", null);
    final ArrayList<Node> arrayList = PowerMockito.mock(ArrayList.class);
    final Stream<Node> stream = (Stream<Node>) Reflector.getInstance("java.util.stream.Stream");
    final Method streamMethod = DTUMemberMatcher.method(ArrayList.class, "stream");
    PowerMockito.doReturn(stream).when(arrayList, streamMethod).withNoArguments();
    Reflector.setField(arrayList, "modCount", 2);
    Reflector.setField(creatureNodeList, "internal", arrayList);
    final Stream<Node> actual = creatureNodeList.stream();
    Assert.assertNotNull(actual);
  }

  @Test
  public void getCenterOutputNotNull() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(0x1.fffffffffffffp+1022 /* 8.98847e+307 */, actual.y, 0.0);
    Assert.assertEquals(0x1.fffffffffffffp+1022 /* 8.98847e+307 */, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull1() throws InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    arrayList.add(null);
    arrayList.add(null);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 0x1.00000000004p+1 /* 2.0 */);
    Reflector.setField(node, "size", 4.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 0x1.d61922c9fdbfbp+9 /* 940.196 */;
    vector.x = 0x1.fdb9df5d9d03ap+8 /* 509.726 */;
    Reflector.setField(node, "p", vector);
    arrayList1.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 0x1.d3014663dfbe9p+9 /* 934.01 */;
    vector1.x = 0x1.fdb9df5d1d03ap+8 /* 509.726 */;
    Reflector.setField(node1, "p", vector1);
    arrayList1.add(node1);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(0x1.d48d3496eebf2p+9 /* 937.103 */, actual.y, 0.0);
    Assert.assertEquals(0x1.fdb9df5d5d03ap+8 /* 509.726 */, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull2() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 3;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 4.0;
    vector.x = 0x1.d0a0d5131cb9bp+2 /* 7.25982 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 3;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.0000000008p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 0x1.00000000002p+1 /* 2.0 */);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 32.0;
    vector1.x = 0x1.d0a0d51338b9bp+1 /* 3.62991 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(18.0, actual.y, 0.0);
    Assert.assertEquals(0x1.5c789fce5c8b4p+2 /* 5.44486 */, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull3() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 2;
    node.color = null;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node, "v", vector1);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 0x1.c01ab004e3bffp+3 /* 14.0033 */;
    vector2.x = 4.0;
    Reflector.setField(node, "p", vector2);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node1.color = color;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 0x1.c01ab004acp+5 /* 56.013 */;
    vector3.x = 0x1.000001p+9 /* 512.0 */;
    Reflector.setField(node1, "p", vector3);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(0x1.1810ae02f278p+5 /* 35.0081 */, actual.y, 0.0);
    Assert.assertEquals(0x1.020001p+8 /* 258.0 */, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull4() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 96.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 128.0;
    vector.x = 2.0;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(128.0, actual.y, 0.0);
    Assert.assertEquals(2.0, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull5() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "originalPos", vector);
    node.nodeId = 2;
    node.color = null;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node, "v", vector1);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 0x1.c014d498de4p+9 /* 896.163 */;
    vector2.x = 4.0;
    Reflector.setField(node, "p", vector2);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node1.color = color;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 0x1.8212ad70bfb5fp+5 /* 48.2591 */;
    vector3.x = 0x1.000001p+9 /* 512.0 */;
    Reflector.setField(node1, "p", vector3);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(0x1.d835ff6fea3b6p+8 /* 472.211 */, actual.y, 0.0);
    Assert.assertEquals(0x1.020001p+8 /* 258.0 */, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull6() throws InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    arrayList.add(null);
    arrayList.add(null);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 0x1.00000000004p+1 /* 2.0 */);
    Reflector.setField(node, "size", 4.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 0x1.d61922c9fdbfbp+9 /* 940.196 */;
    vector.x = 0x1.fdb9df5d9d03ap+8 /* 509.726 */;
    Reflector.setField(node, "p", vector);
    arrayList1.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 0x1.d3014663dfbe9p+9 /* 934.01 */;
    vector1.x = 0x1.fdf9df5d1d03ap+8 /* 509.976 */;
    Reflector.setField(node1, "p", vector1);
    arrayList1.add(node1);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(0x1.d48d3496eebf2p+9 /* 937.103 */, actual.y, 0.0);
    Assert.assertEquals(0x1.fdd9df5d5d03ap+8 /* 509.851 */, actual.x, 0.0);
  }

  @Test
  public void getCenterOutputNotNull7() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 3;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 4.0;
    vector.x = 0x1.d0a0d5131cb9bp+2 /* 7.25982 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 3;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.0000000008p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 0x1.00000000002p+1 /* 2.0 */);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 4.0;
    vector1.x = 0x1.d0a0d51338b9bp+1 /* 3.62991 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    final Vector actual = creature.getCenter();
    Assert.assertNotNull(actual);
    Assert.assertEquals(4.0, actual.y, 0.0);
    Assert.assertEquals(0x1.5c789fce5c8b4p+2 /* 5.44486 */, actual.x, 0.0);
  }

  @Test
  public void getFitnessOutputPositive() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node.color = color;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.0000000000001p+1 /* 2.0 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 3;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.000008p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.0000000000003p+1 /* 2.0 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(0x1.0000000000003p+1 /* 2.0 */, creature.getFitness(), 0.0);
    Assert.assertEquals(0x1.0000000000003p+1 /* 2.0 */, creature.maxReached, 0.0);
  }

  @Test
  public void getFitnessOutputPositive1() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(2.0, creature.getFitness(), 0.0);
  }

  @Test
  public void getFitnessOutputPositive2() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 8.0;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(8.0, creature.getFitness(), 0.0);
    Assert.assertEquals(8.0, creature.maxReached, 0.0);
  }

  @Test
  public void getFitnessOutputPositive3() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "v", vector);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.ffffffffffffdp+8 /* 512.0 */;
    Reflector.setField(node, "p", vector1);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node1, "originalPos", vector2);
    node1.nodeId = 2;
    node1.color = null;
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 2.0;
    Reflector.setField(node1, "v", vector3);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 2.0;
    vector4.x = 0x1.ffffffffffffdp+8 /* 512.0 */;
    Reflector.setField(node1, "p", vector4);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 0x1.fffffffffffffp+8 /* 512.0 */;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(0x1.fffffffffffffp+8 /* 512.0 */, creature.getFitness(), 0.0);
  }

  @Test
  public void getFitnessOutputPositive4() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node.color = color;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.07ff801fffff5p+1 /* 2.06248 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 3;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.000008p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.0000000000007p+1 /* 2.0 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(0x1.07ff801fffff5p+1 /* 2.06248 */, creature.getFitness(), 0.0);
    Assert.assertEquals(0x1.07ff801fffff5p+1 /* 2.06248 */, creature.maxReached, 0.0);
  }

  @Test
  public void getFitnessOutputPositive5() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "v", vector);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.ffffffffffffdp+4 /* 32.0 */;
    Reflector.setField(node, "p", vector1);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node1, "originalPos", vector2);
    node1.nodeId = 2;
    node1.color = null;
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 2.0;
    Reflector.setField(node1, "v", vector3);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 2.0;
    vector4.x = 0x1.ffffffffffffdp+4 /* 32.0 */;
    Reflector.setField(node1, "p", vector4);
    arrayList.add(node1);
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node2.color = color;
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 2.0;
    vector5.x = 2.0;
    Reflector.setField(node2, "v", vector5);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector6 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector6.y = 2.0;
    vector6.x = 0x1.fffdfffffffffp+4 /* 31.9995 */;
    Reflector.setField(node2, "p", vector6);
    arrayList.add(node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 2;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector7 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector7.y = 2.0;
    vector7.x = 0x1.fffffffffffffp+8 /* 512.0 */;
    Reflector.setField(node3, "p", vector7);
    arrayList.add(node3);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 0x1.fffffffffffffp+4 /* 32.0 */;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(0x1.fffffffffffffp+8 /* 512.0 */, creature.getFitness(), 0.0);
    Assert.assertEquals(0x1.fffffffffffffp+8 /* 512.0 */, creature.maxReached, 0.0);
  }

  @Test
  public void getFitnessOutputPositive6() throws InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 4.0;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 4.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    Assert.assertEquals(4.0, creature.getFitness(), 0.0);
  }

  @PrepareForTest(GraphicsContext.class)
  @Test
  public void renderInputNotNullFalseOutputVoid() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 2.0;
    muscle.maxLength = 2.0;
    muscle.period = 2.0;
    muscle.minLength = 2.0;
    muscle.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "p", vector);
    Reflector.setField(muscle, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node1, "p", vector1);
    Reflector.setField(muscle, "node2", node1);
    arrayList2.add(muscle);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    creature.render(gc, false);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(GraphicsContext.class)
  @Test
  public void renderInputNotNullFalseOutputVoid1() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    creature.render(gc, false);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(GraphicsContext.class)
  @Test
  public void renderInputNotNullFalseOutputVoid2() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    final Creature.Bone bone = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone.color = null;
    Reflector.setField(bone, "length", 2.0);
    bone.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.0000000000002p+1 /* 2.0 */;
    Reflector.setField(node, "p", vector);
    Reflector.setField(bone, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 3;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector1.x = 2.0;
    Reflector.setField(node1, "p", vector1);
    Reflector.setField(bone, "node2", node1);
    arrayList.add(bone);
    final Creature.Bone bone1 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone1.color = null;
    Reflector.setField(bone1, "length", 2.0);
    bone1.expectedLength = 2.0;
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node2, "p", vector2);
    Reflector.setField(bone1, "node1", node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 3;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 2.0;
    Reflector.setField(node3, "p", vector3);
    Reflector.setField(bone1, "node2", node3);
    arrayList.add(bone1);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    final Node node4 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 2.0;
    vector4.x = 2.0;
    Reflector.setField(node4, "originalPos", vector4);
    node4.nodeId = 2;
    node4.color = null;
    Reflector.setField(node4, "v", null);
    Reflector.setField(node4, "weight", 2.0);
    Reflector.setField(node4, "size", 16.0);
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 0x1.4004p+2 /* 5.00024 */;
    vector5.x = 12.0;
    Reflector.setField(node4, "p", vector5);
    arrayList1.add(node4);
    final Node node5 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node5, "originalPos", null);
    node5.nodeId = 2;
    node5.color = null;
    Reflector.setField(node5, "v", null);
    Reflector.setField(node5, "weight", 2.0);
    Reflector.setField(node5, "size", 2.0);
    final Vector vector6 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector6.y = 0x1.0000002p+7 /* 128.0 */;
    vector6.x = 2.0;
    Reflector.setField(node5, "p", vector6);
    arrayList1.add(node5);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 1024.0;
    muscle.maxLength = 1024.0;
    muscle.period = 0x1.0000000000008p+1 /* 2.0 */;
    muscle.minLength = 2.0;
    muscle.expectedLength = 2.0;
    final Node node6 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node6, "originalPos", null);
    node6.nodeId = 3;
    node6.color = null;
    Reflector.setField(node6, "v", null);
    Reflector.setField(node6, "weight", 2.0);
    Reflector.setField(node6, "size", 512.0);
    final Vector vector7 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector7.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector7.x = 3.0;
    Reflector.setField(node6, "p", vector7);
    Reflector.setField(muscle, "node1", node6);
    final Node node7 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node7, "originalPos", null);
    node7.nodeId = 2;
    node7.color = null;
    Reflector.setField(node7, "v", null);
    Reflector.setField(node7, "weight", 512.0);
    Reflector.setField(node7, "size", 1024.0);
    final Vector vector8 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector8.y = 2.0;
    vector8.x = 2.0;
    Reflector.setField(node7, "p", vector8);
    Reflector.setField(muscle, "node2", node7);
    arrayList2.add(muscle);
    final Creature.Muscle muscle1 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle1.power = 2.0;
    muscle1.maxLength = 2.0;
    muscle1.period = 2.0;
    muscle1.minLength = 2.0;
    muscle1.expectedLength = 2.0;
    final Node node8 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node8, "originalPos", null);
    node8.nodeId = 4;
    node8.color = null;
    Reflector.setField(node8, "v", null);
    Reflector.setField(node8, "weight", 32.0);
    Reflector.setField(node8, "size", 32.0);
    final Vector vector9 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector9.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector9.x = 0x1.0000000000001p+1 /* 2.0 */;
    Reflector.setField(node8, "p", vector9);
    Reflector.setField(muscle1, "node1", node8);
    final Node node9 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node9, "originalPos", null);
    node9.nodeId = 2;
    node9.color = null;
    Reflector.setField(node9, "v", null);
    Reflector.setField(node9, "weight", 2.0);
    Reflector.setField(node9, "size", 2.0);
    final Vector vector10 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector10.y = 2.0;
    vector10.x = 32.0;
    Reflector.setField(node9, "p", vector10);
    Reflector.setField(muscle1, "node2", node9);
    arrayList2.add(muscle1);
    final Creature.Muscle muscle2 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle2.power = 2.0;
    muscle2.maxLength = 2.0;
    muscle2.period = 2.0;
    muscle2.minLength = 2.0;
    muscle2.expectedLength = 2.0;
    final Node node10 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node10, "originalPos", null);
    node10.nodeId = 2;
    node10.color = null;
    Reflector.setField(node10, "v", null);
    Reflector.setField(node10, "weight", 2.0);
    Reflector.setField(node10, "size", 2.0);
    final Vector vector11 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector11.y = 2.0;
    vector11.x = 2.0;
    Reflector.setField(node10, "p", vector11);
    Reflector.setField(muscle2, "node1", node10);
    final Node node11 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node11, "originalPos", null);
    node11.nodeId = 2;
    node11.color = null;
    Reflector.setField(node11, "v", null);
    Reflector.setField(node11, "weight", 2.0);
    Reflector.setField(node11, "size", 2.0);
    final Vector vector12 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector12.y = 0x1.000001p+1 /* 2.0 */;
    vector12.x = 0x1.0000000000001p+1 /* 2.0 */;
    Reflector.setField(node11, "p", vector12);
    Reflector.setField(muscle2, "node2", node11);
    arrayList2.add(muscle2);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    creature.render(gc, false);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(GraphicsContext.class)
  @Test
  public void renderInputNotNullFalseOutputVoid3() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    final Creature.Bone bone = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone.color = null;
    Reflector.setField(bone, "length", 2.0);
    bone.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "p", vector);
    Reflector.setField(bone, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    final Color color = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node1.color = color;
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node1, "v", vector1);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node1, "p", vector2);
    Reflector.setField(bone, "node2", node1);
    arrayList.add(bone);
    final Creature.Bone bone1 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone1.color = null;
    Reflector.setField(bone1, "length", 2.0);
    bone1.expectedLength = 2.0;
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 2.0;
    Reflector.setField(node2, "originalPos", vector3);
    node2.nodeId = 2;
    final Color color1 = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node2.color = color1;
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 2.0;
    vector4.x = 2.0;
    Reflector.setField(node2, "v", vector4);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 2.0;
    vector5.x = 2.0;
    Reflector.setField(node2, "p", vector5);
    Reflector.setField(bone1, "node1", node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 2;
    final Color color2 = (Color) Reflector.getInstance("javafx.scene.paint.Color");
    node3.color = color2;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector6 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector6.y = 2.0;
    vector6.x = 2.0;
    Reflector.setField(node3, "p", vector6);
    Reflector.setField(bone1, "node2", node3);
    arrayList.add(bone1);
    final Creature.Bone bone2 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone2.color = null;
    Reflector.setField(bone2, "length", 2.0);
    bone2.expectedLength = 0x1.00000002p+1 /* 2.0 */;
    final Node node4 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node4, "originalPos", null);
    node4.nodeId = 2;
    node4.color = null;
    Reflector.setField(node4, "v", null);
    Reflector.setField(node4, "weight", 2.0);
    Reflector.setField(node4, "size", 2.0);
    final Vector vector7 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector7.y = 0x1.0000000000002p+1 /* 2.0 */;
    vector7.x = 0x1.00000000002p+1 /* 2.0 */;
    Reflector.setField(node4, "p", vector7);
    Reflector.setField(bone2, "node1", node4);
    final Node node5 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node5, "originalPos", null);
    node5.nodeId = 2;
    node5.color = null;
    Reflector.setField(node5, "v", null);
    Reflector.setField(node5, "weight", 2.0);
    Reflector.setField(node5, "size", 2.0);
    final Vector vector8 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector8.y = 2.0;
    vector8.x = 2.0;
    Reflector.setField(node5, "p", vector8);
    Reflector.setField(bone2, "node2", node5);
    arrayList.add(bone2);
    final Creature.Bone bone3 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone3.color = null;
    Reflector.setField(bone3, "length", 2.0);
    bone3.expectedLength = 0x1.00000000008p+1 /* 2.0 */;
    final Node node6 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node6, "originalPos", null);
    node6.nodeId = 2;
    node6.color = null;
    Reflector.setField(node6, "v", null);
    Reflector.setField(node6, "weight", 2.0);
    Reflector.setField(node6, "size", 2.0);
    final Vector vector9 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector9.y = 2.0;
    vector9.x = 2.0;
    Reflector.setField(node6, "p", vector9);
    Reflector.setField(bone3, "node1", node6);
    final Node node7 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node7, "originalPos", null);
    node7.nodeId = 3;
    node7.color = null;
    Reflector.setField(node7, "v", null);
    Reflector.setField(node7, "weight", 2.0);
    Reflector.setField(node7, "size", 2.0);
    final Vector vector10 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector10.y = 2.0;
    vector10.x = 2.0;
    Reflector.setField(node7, "p", vector10);
    Reflector.setField(bone3, "node2", node7);
    arrayList.add(bone3);
    final Creature.Bone bone4 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone4.color = null;
    Reflector.setField(bone4, "length", 2.0);
    bone4.expectedLength = 2.0;
    final Node node8 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node8, "originalPos", null);
    node8.nodeId = 4;
    node8.color = null;
    Reflector.setField(node8, "v", null);
    Reflector.setField(node8, "weight", 2.0);
    Reflector.setField(node8, "size", 512.0);
    final Vector vector11 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector11.y = 4.0;
    vector11.x = 4.0;
    Reflector.setField(node8, "p", vector11);
    Reflector.setField(bone4, "node1", node8);
    final Node node9 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node9, "originalPos", null);
    node9.nodeId = 2;
    node9.color = null;
    Reflector.setField(node9, "v", null);
    Reflector.setField(node9, "weight", 1024.0);
    Reflector.setField(node9, "size", 2.0);
    final Vector vector12 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector12.y = 0x1.000000000004p+1 /* 2.0 */;
    vector12.x = 512.0;
    Reflector.setField(node9, "p", vector12);
    Reflector.setField(bone4, "node2", node9);
    arrayList.add(bone4);
    final Creature.Bone bone5 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone5.color = null;
    Reflector.setField(bone5, "length", 0x1.000000000004p+1 /* 2.0 */);
    bone5.expectedLength = 2.0;
    final Node node10 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node10, "originalPos", null);
    node10.nodeId = 2;
    node10.color = null;
    Reflector.setField(node10, "v", null);
    Reflector.setField(node10, "weight", 2.0);
    Reflector.setField(node10, "size", 2.0);
    final Vector vector13 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector13.y = 2.0;
    vector13.x = 2.0;
    Reflector.setField(node10, "p", vector13);
    Reflector.setField(bone5, "node1", node10);
    final Node node11 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node11, "originalPos", null);
    node11.nodeId = 3;
    node11.color = null;
    Reflector.setField(node11, "v", null);
    Reflector.setField(node11, "weight", 2.0);
    Reflector.setField(node11, "size", 512.0);
    final Vector vector14 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector14.y = 2.0;
    vector14.x = 0x1.0000000000002p+1 /* 2.0 */;
    Reflector.setField(node11, "p", vector14);
    Reflector.setField(bone5, "node2", node11);
    arrayList.add(bone5);
    final Creature.Bone bone6 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone6.color = null;
    Reflector.setField(bone6, "length", 0x1.0000000000001p+1 /* 2.0 */);
    bone6.expectedLength = 0x1.0000000000001p+1 /* 2.0 */;
    final Node node12 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node12, "originalPos", null);
    node12.nodeId = 2;
    node12.color = null;
    Reflector.setField(node12, "v", null);
    Reflector.setField(node12, "weight", 1024.0);
    Reflector.setField(node12, "size", 2.0);
    final Vector vector15 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector15.y = 2.0;
    vector15.x = 2.0;
    Reflector.setField(node12, "p", vector15);
    Reflector.setField(bone6, "node1", node12);
    final Node node13 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node13, "originalPos", null);
    node13.nodeId = 2;
    node13.color = null;
    Reflector.setField(node13, "v", null);
    Reflector.setField(node13, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node13, "size", 512.0);
    final Vector vector16 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector16.y = 2.0;
    vector16.x = 2.0;
    Reflector.setField(node13, "p", vector16);
    Reflector.setField(bone6, "node2", node13);
    arrayList.add(bone6);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    final Node node14 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node14, "originalPos", null);
    node14.nodeId = 2;
    node14.color = null;
    Reflector.setField(node14, "v", null);
    Reflector.setField(node14, "weight", 2.0);
    Reflector.setField(node14, "size", 0x1.2000002p+8 /* 288.0 */);
    final Vector vector17 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector17.y = 2.0;
    vector17.x = 16.0;
    Reflector.setField(node14, "p", vector17);
    arrayList1.add(node14);
    final Node node15 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node15, "originalPos", null);
    node15.nodeId = 8;
    node15.color = null;
    Reflector.setField(node15, "v", null);
    Reflector.setField(node15, "weight", 2.0);
    Reflector.setField(node15, "size", 1024.0);
    final Vector vector18 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector18.y = 512.0;
    vector18.x = 0x1.000000023fp+9 /* 512.0 */;
    Reflector.setField(node15, "p", vector18);
    arrayList1.add(node15);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 0x1.000000001p+1 /* 2.0 */;
    muscle.maxLength = 0x1.000000000001p+1 /* 2.0 */;
    muscle.period = 0x1.0000000000001p+1 /* 2.0 */;
    muscle.minLength = 0x1.000000000001p+1 /* 2.0 */;
    muscle.expectedLength = 0x1.00000000001p+1 /* 2.0 */;
    final Node node16 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node16, "originalPos", null);
    node16.nodeId = 2;
    node16.color = null;
    Reflector.setField(node16, "v", null);
    Reflector.setField(node16, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node16, "size", 512.0);
    final Vector vector19 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector19.y = 0x1.00000000002p+1 /* 2.0 */;
    vector19.x = 2.0;
    Reflector.setField(node16, "p", vector19);
    Reflector.setField(muscle, "node1", node16);
    final Node node17 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node17, "originalPos", null);
    node17.nodeId = 2;
    node17.color = null;
    Reflector.setField(node17, "v", null);
    Reflector.setField(node17, "weight", 512.0);
    Reflector.setField(node17, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector20 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector20.y = 512.0;
    vector20.x = 2.0;
    Reflector.setField(node17, "p", vector20);
    Reflector.setField(muscle, "node2", node17);
    arrayList2.add(muscle);
    final Creature.Muscle muscle1 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle1.power = 1024.0;
    muscle1.maxLength = 0x1.0000000000008p+1 /* 2.0 */;
    muscle1.period = 512.0;
    muscle1.minLength = 0x1.0000000000001p+1 /* 2.0 */;
    muscle1.expectedLength = 1024.0;
    final Node node18 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node18, "originalPos", null);
    node18.nodeId = 3;
    node18.color = null;
    Reflector.setField(node18, "v", null);
    Reflector.setField(node18, "weight", 2.0);
    Reflector.setField(node18, "size", 2.0);
    final Vector vector21 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector21.y = 2.0;
    vector21.x = 4.0;
    Reflector.setField(node18, "p", vector21);
    Reflector.setField(muscle1, "node1", node18);
    final Node node19 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node19, "originalPos", null);
    node19.nodeId = 2;
    node19.color = null;
    Reflector.setField(node19, "v", null);
    Reflector.setField(node19, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node19, "size", 0x1.0000000000004p+1 /* 2.0 */);
    final Vector vector22 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector22.y = 2.0;
    vector22.x = 2.0;
    Reflector.setField(node19, "p", vector22);
    Reflector.setField(muscle1, "node2", node19);
    arrayList2.add(muscle1);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    creature.render(gc, false);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(GraphicsContext.class)
  @Test
  public void renderInputNotNullFalseOutputVoid4() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    final Creature.Bone bone = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone.color = null;
    Reflector.setField(bone, "length", 2.0);
    bone.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "p", vector);
    Reflector.setField(bone, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node1, "p", vector1);
    Reflector.setField(bone, "node2", node1);
    arrayList.add(bone);
    final Creature.Bone bone1 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone1.color = null;
    Reflector.setField(bone1, "length", 2.0);
    bone1.expectedLength = 2.0;
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node2, "p", vector2);
    Reflector.setField(bone1, "node1", node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 2;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 0x1.001p+1 /* 2.00049 */;
    vector3.x = 0x1.000000002p+1 /* 2.0 */;
    Reflector.setField(node3, "p", vector3);
    Reflector.setField(bone1, "node2", node3);
    arrayList.add(bone1);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList1 = new ArrayList<Node>();
    final Node node4 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node4, "originalPos", null);
    node4.nodeId = 2;
    node4.color = null;
    Reflector.setField(node4, "v", null);
    Reflector.setField(node4, "weight", 2.0);
    Reflector.setField(node4, "size", 1024.0);
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 512.0;
    vector4.x = 512.0;
    Reflector.setField(node4, "p", vector4);
    arrayList1.add(node4);
    final Node node5 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 2.0;
    vector5.x = 2.0;
    Reflector.setField(node5, "originalPos", vector5);
    node5.nodeId = 2;
    node5.color = null;
    Reflector.setField(node5, "v", null);
    Reflector.setField(node5, "weight", 2.0);
    Reflector.setField(node5, "size", 2.0);
    final Vector vector6 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector6.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector6.x = 2.0;
    Reflector.setField(node5, "p", vector6);
    arrayList1.add(node5);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 0x1.0000000000001p+1 /* 2.0 */;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 2.0;
    muscle.maxLength = 2.0;
    muscle.period = 1024.0;
    muscle.minLength = 0x1.0000000000001p+1 /* 2.0 */;
    muscle.expectedLength = 0x1.0000000001p+1 /* 2.0 */;
    final Node node6 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node6, "originalPos", null);
    node6.nodeId = 3;
    node6.color = null;
    Reflector.setField(node6, "v", null);
    Reflector.setField(node6, "weight", 2.0);
    Reflector.setField(node6, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector7 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector7.y = 512.0;
    vector7.x = 512.0;
    Reflector.setField(node6, "p", vector7);
    Reflector.setField(muscle, "node1", node6);
    final Node node7 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node7, "originalPos", null);
    node7.nodeId = 2;
    node7.color = null;
    Reflector.setField(node7, "v", null);
    Reflector.setField(node7, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node7, "size", 2.0);
    final Vector vector8 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector8.y = 2.0;
    vector8.x = 2.0;
    Reflector.setField(node7, "p", vector8);
    Reflector.setField(muscle, "node2", node7);
    arrayList2.add(muscle);
    final Creature.Muscle muscle1 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle1.power = 1024.0;
    muscle1.maxLength = 0x1.000000002p+1 /* 2.0 */;
    muscle1.period = 0x1.0000004p+1 /* 2.0 */;
    muscle1.minLength = 0x1.0000000000001p+1 /* 2.0 */;
    muscle1.expectedLength = 1024.0;
    final Node node8 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node8, "originalPos", null);
    node8.nodeId = 2;
    node8.color = null;
    Reflector.setField(node8, "v", null);
    Reflector.setField(node8, "weight", 1024.0);
    Reflector.setField(node8, "size", 0x1.000001p+1 /* 2.0 */);
    final Vector vector9 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector9.y = 2.0;
    vector9.x = 2.0;
    Reflector.setField(node8, "p", vector9);
    Reflector.setField(muscle1, "node1", node8);
    final Node node9 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node9, "originalPos", null);
    node9.nodeId = 2;
    node9.color = null;
    Reflector.setField(node9, "v", null);
    Reflector.setField(node9, "weight", 1024.0);
    Reflector.setField(node9, "size", 32.0);
    final Vector vector10 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector10.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector10.x = 2.0;
    Reflector.setField(node9, "p", vector10);
    Reflector.setField(muscle1, "node2", node9);
    arrayList2.add(muscle1);
    final Creature.Muscle muscle2 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle2.power = 0x1.000000000001p+1 /* 2.0 */;
    muscle2.maxLength = 1024.0;
    muscle2.period = 0x1.0000000000004p+1 /* 2.0 */;
    muscle2.minLength = 2.0;
    muscle2.expectedLength = 0x1.0000000000002p+1 /* 2.0 */;
    final Node node10 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node10, "originalPos", null);
    node10.nodeId = 1024;
    node10.color = null;
    Reflector.setField(node10, "v", null);
    Reflector.setField(node10, "weight", 0x1.000000001p+1 /* 2.0 */);
    Reflector.setField(node10, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector11 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector11.y = 2.0;
    vector11.x = 2.0;
    Reflector.setField(node10, "p", vector11);
    Reflector.setField(muscle2, "node1", node10);
    final Node node11 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node11, "originalPos", null);
    node11.nodeId = 2;
    node11.color = null;
    Reflector.setField(node11, "v", null);
    Reflector.setField(node11, "weight", 2.0);
    Reflector.setField(node11, "size", 2.0);
    final Vector vector12 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector12.y = 2.0;
    vector12.x = 2.0;
    Reflector.setField(node11, "p", vector12);
    Reflector.setField(muscle2, "node2", node11);
    arrayList2.add(muscle2);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    creature.render(gc, false);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest({Font.class, GraphicsContext.class})
  @Test
  public void renderInputNotNullTrueOutputVoid() throws Exception, InvocationTargetException {

    PowerMockito.mockStatic(Font.class);
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    final Creature.Bone bone = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone.color = null;
    Reflector.setField(bone, "length", 2.0);
    bone.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "p", vector);
    Reflector.setField(bone, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node1, "p", vector1);
    Reflector.setField(bone, "node2", node1);
    arrayList.add(bone);
    final Creature.Bone bone1 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone1.color = null;
    Reflector.setField(bone1, "length", 2.0);
    bone1.expectedLength = 2.0;
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node2, "p", vector2);
    Reflector.setField(bone1, "node1", node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 2;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 0x1.001p+1 /* 2.00049 */;
    vector3.x = 0x1.000000002p+1 /* 2.0 */;
    Reflector.setField(node3, "p", vector3);
    Reflector.setField(bone1, "node2", node3);
    arrayList.add(bone1);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList arrayList1 = new ArrayList();
    final Node node4 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node4, "originalPos", null);
    node4.nodeId = 2;
    node4.color = null;
    Reflector.setField(node4, "v", null);
    Reflector.setField(node4, "weight", 2.0);
    Reflector.setField(node4, "size", 1024.0);
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 512.0;
    vector4.x = 512.0;
    Reflector.setField(node4, "p", vector4);
    arrayList1.add(node4);
    final Node node5 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 2.0;
    vector5.x = 2.0;
    Reflector.setField(node5, "originalPos", vector5);
    node5.nodeId = 2;
    node5.color = null;
    Reflector.setField(node5, "v", null);
    Reflector.setField(node5, "weight", 2.0);
    Reflector.setField(node5, "size", 2.0);
    final Vector vector6 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector6.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector6.x = 2.0;
    Reflector.setField(node5, "p", vector6);
    arrayList1.add(node5);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 0x1.0000000000001p+1 /* 2.0 */;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 2.0;
    muscle.maxLength = 2.0;
    muscle.period = 1024.0;
    muscle.minLength = 0x1.0000000000001p+1 /* 2.0 */;
    muscle.expectedLength = 0x1.0000000001p+1 /* 2.0 */;
    final Node node6 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node6, "originalPos", null);
    node6.nodeId = 3;
    node6.color = null;
    Reflector.setField(node6, "v", null);
    Reflector.setField(node6, "weight", 2.0);
    Reflector.setField(node6, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector7 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector7.y = 512.0;
    vector7.x = 512.0;
    Reflector.setField(node6, "p", vector7);
    Reflector.setField(muscle, "node1", node6);
    final Node node7 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node7, "originalPos", null);
    node7.nodeId = 2;
    node7.color = null;
    Reflector.setField(node7, "v", null);
    Reflector.setField(node7, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node7, "size", 2.0);
    final Vector vector8 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector8.y = 2.0;
    vector8.x = 2.0;
    Reflector.setField(node7, "p", vector8);
    Reflector.setField(muscle, "node2", node7);
    arrayList2.add(muscle);
    final Creature.Muscle muscle1 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle1.power = 1024.0;
    muscle1.maxLength = 0x1.000000002p+1 /* 2.0 */;
    muscle1.period = 0x1.0000004p+1 /* 2.0 */;
    muscle1.minLength = 0x1.0000000000001p+1 /* 2.0 */;
    muscle1.expectedLength = 1024.0;
    final Node node8 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node8, "originalPos", null);
    node8.nodeId = 2;
    node8.color = null;
    Reflector.setField(node8, "v", null);
    Reflector.setField(node8, "weight", 1024.0);
    Reflector.setField(node8, "size", 0x1.000001p+1 /* 2.0 */);
    final Vector vector9 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector9.y = 2.0;
    vector9.x = 2.0;
    Reflector.setField(node8, "p", vector9);
    Reflector.setField(muscle1, "node1", node8);
    final Node node9 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node9, "originalPos", null);
    node9.nodeId = 2;
    node9.color = null;
    Reflector.setField(node9, "v", null);
    Reflector.setField(node9, "weight", 1024.0);
    Reflector.setField(node9, "size", 32.0);
    final Vector vector10 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector10.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector10.x = 2.0;
    Reflector.setField(node9, "p", vector10);
    Reflector.setField(muscle1, "node2", node9);
    arrayList2.add(muscle1);
    final Creature.Muscle muscle2 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle2.power = 0x1.000000000001p+1 /* 2.0 */;
    muscle2.maxLength = 1024.0;
    muscle2.period = 0x1.0000000000004p+1 /* 2.0 */;
    muscle2.minLength = 2.0;
    muscle2.expectedLength = 0x1.0000000000002p+1 /* 2.0 */;
    final Node node10 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node10, "originalPos", null);
    node10.nodeId = 1024;
    node10.color = null;
    Reflector.setField(node10, "v", null);
    Reflector.setField(node10, "weight", 0x1.000000001p+1 /* 2.0 */);
    Reflector.setField(node10, "size", 0x1.0000000000001p+1 /* 2.0 */);
    final Vector vector11 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector11.y = 2.0;
    vector11.x = 2.0;
    Reflector.setField(node10, "p", vector11);
    Reflector.setField(muscle2, "node1", node10);
    final Node node11 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node11, "originalPos", null);
    node11.nodeId = 2;
    node11.color = null;
    Reflector.setField(node11, "v", null);
    Reflector.setField(node11, "weight", 2.0);
    Reflector.setField(node11, "size", 2.0);
    final Vector vector12 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector12.y = 2.0;
    vector12.x = 2.0;
    Reflector.setField(node11, "p", vector12);
    Reflector.setField(muscle2, "node2", node11);
    arrayList2.add(muscle2);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    final boolean showNumber = true;
    final Method fontMethod = DTUMemberMatcher.method(Font.class, "font", double.class);
    PowerMockito.doReturn(null).when(Font.class, fontMethod).withArguments(anyDouble());
    creature.render(gc, showNumber);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest({Font.class, GraphicsContext.class})
  @Test
  public void renderInputNotNullTrueOutputVoid1() throws Exception, InvocationTargetException {

    PowerMockito.mockStatic(Font.class);
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList arrayList1 = new ArrayList();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    final boolean showNumber = true;
    final Font font = (Font) Reflector.getInstance("javafx.scene.text.Font");
    final Method fontMethod = DTUMemberMatcher.method(Font.class, "font", double.class);
    PowerMockito.doReturn(font).when(Font.class, fontMethod).withArguments(anyDouble());
    creature.render(gc, showNumber);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest({Font.class, GraphicsContext.class})
  @Test
  public void renderInputNotNullTrueOutputVoid2() throws Exception, InvocationTargetException {

    PowerMockito.mockStatic(Font.class);
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    final Creature.Bone bone = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone.color = null;
    Reflector.setField(bone, "length", 2.0);
    bone.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.0000000000002p+1 /* 2.0 */;
    Reflector.setField(node, "p", vector);
    Reflector.setField(bone, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 3;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.0000000000001p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector1.x = 2.0;
    Reflector.setField(node1, "p", vector1);
    Reflector.setField(bone, "node2", node1);
    arrayList.add(bone);
    final Creature.Bone bone1 = (Creature.Bone) Reflector.getInstance("net.barbux.creatures2d.Creature$Bone");
    bone1.color = null;
    Reflector.setField(bone1, "length", 2.0);
    bone1.expectedLength = 2.0;
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 2.0;
    Reflector.setField(node2, "p", vector2);
    Reflector.setField(bone1, "node1", node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 3;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 2.0;
    Reflector.setField(node3, "p", vector3);
    Reflector.setField(bone1, "node2", node3);
    arrayList.add(bone1);
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList arrayList1 = new ArrayList();
    final Node node4 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    final Vector vector4 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector4.y = 2.0;
    vector4.x = 2.0;
    Reflector.setField(node4, "originalPos", vector4);
    node4.nodeId = 2;
    node4.color = null;
    Reflector.setField(node4, "v", null);
    Reflector.setField(node4, "weight", 2.0);
    Reflector.setField(node4, "size", 16.0);
    final Vector vector5 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector5.y = 0x1.4004p+2 /* 5.00024 */;
    vector5.x = 12.0;
    Reflector.setField(node4, "p", vector5);
    arrayList1.add(node4);
    final Node node5 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node5, "originalPos", null);
    node5.nodeId = 2;
    node5.color = null;
    Reflector.setField(node5, "v", null);
    Reflector.setField(node5, "weight", 2.0);
    Reflector.setField(node5, "size", 2.0);
    final Vector vector6 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector6.y = 0x1.0000002p+7 /* 128.0 */;
    vector6.x = 2.0;
    Reflector.setField(node5, "p", vector6);
    arrayList1.add(node5);
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 1024.0;
    muscle.maxLength = 1024.0;
    muscle.period = 0x1.0000000000008p+1 /* 2.0 */;
    muscle.minLength = 2.0;
    muscle.expectedLength = 2.0;
    final Node node6 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node6, "originalPos", null);
    node6.nodeId = 3;
    node6.color = null;
    Reflector.setField(node6, "v", null);
    Reflector.setField(node6, "weight", 2.0);
    Reflector.setField(node6, "size", 512.0);
    final Vector vector7 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector7.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector7.x = 3.0;
    Reflector.setField(node6, "p", vector7);
    Reflector.setField(muscle, "node1", node6);
    final Node node7 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node7, "originalPos", null);
    node7.nodeId = 2;
    node7.color = null;
    Reflector.setField(node7, "v", null);
    Reflector.setField(node7, "weight", 512.0);
    Reflector.setField(node7, "size", 1024.0);
    final Vector vector8 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector8.y = 2.0;
    vector8.x = 2.0;
    Reflector.setField(node7, "p", vector8);
    Reflector.setField(muscle, "node2", node7);
    arrayList2.add(muscle);
    final Creature.Muscle muscle1 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle1.power = 2.0;
    muscle1.maxLength = 2.0;
    muscle1.period = 2.0;
    muscle1.minLength = 2.0;
    muscle1.expectedLength = 2.0;
    final Node node8 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node8, "originalPos", null);
    node8.nodeId = 4;
    node8.color = null;
    Reflector.setField(node8, "v", null);
    Reflector.setField(node8, "weight", 32.0);
    Reflector.setField(node8, "size", 32.0);
    final Vector vector9 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector9.y = 0x1.0000000000001p+1 /* 2.0 */;
    vector9.x = 0x1.0000000000001p+1 /* 2.0 */;
    Reflector.setField(node8, "p", vector9);
    Reflector.setField(muscle1, "node1", node8);
    final Node node9 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node9, "originalPos", null);
    node9.nodeId = 2;
    node9.color = null;
    Reflector.setField(node9, "v", null);
    Reflector.setField(node9, "weight", 2.0);
    Reflector.setField(node9, "size", 2.0);
    final Vector vector10 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector10.y = 2.0;
    vector10.x = 32.0;
    Reflector.setField(node9, "p", vector10);
    Reflector.setField(muscle1, "node2", node9);
    arrayList2.add(muscle1);
    final Creature.Muscle muscle2 = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle2.power = 2.0;
    muscle2.maxLength = 2.0;
    muscle2.period = 2.0;
    muscle2.minLength = 2.0;
    muscle2.expectedLength = 2.0;
    final Node node10 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node10, "originalPos", null);
    node10.nodeId = 2;
    node10.color = null;
    Reflector.setField(node10, "v", null);
    Reflector.setField(node10, "weight", 2.0);
    Reflector.setField(node10, "size", 2.0);
    final Vector vector11 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector11.y = 2.0;
    vector11.x = 2.0;
    Reflector.setField(node10, "p", vector11);
    Reflector.setField(muscle2, "node1", node10);
    final Node node11 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node11, "originalPos", null);
    node11.nodeId = 2;
    node11.color = null;
    Reflector.setField(node11, "v", null);
    Reflector.setField(node11, "weight", 2.0);
    Reflector.setField(node11, "size", 2.0);
    final Vector vector12 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector12.y = 0x1.000001p+1 /* 2.0 */;
    vector12.x = 0x1.0000000000001p+1 /* 2.0 */;
    Reflector.setField(node11, "p", vector12);
    Reflector.setField(muscle2, "node2", node11);
    arrayList2.add(muscle2);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    final boolean showNumber = true;
    final Font font = (Font) Reflector.getInstance("javafx.scene.text.Font");
    final Method fontMethod = DTUMemberMatcher.method(Font.class, "font", double.class);
    PowerMockito.doReturn(font).when(Font.class, fontMethod).withArguments(anyDouble());
    creature.render(gc, showNumber);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest({Font.class, GraphicsContext.class})
  @Test
  public void renderInputNotNullTrueOutputVoid3() throws Exception, InvocationTargetException {

    PowerMockito.mockStatic(Font.class);
    final Creature creature = new Creature();
    final ArrayList<Creature.Bone> arrayList = new ArrayList<Creature.Bone>();
    Reflector.setField(creature, "allBones", arrayList);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList arrayList1 = new ArrayList();
    Reflector.setField(nodeList, "internal", arrayList1);
    Reflector.setField(creature, "allNodes", nodeList);
    creature.physics = null;
    creature.maxReached = 2.0;
    final ArrayList<Creature.Muscle> arrayList2 = new ArrayList<Creature.Muscle>();
    final Creature.Muscle muscle = (Creature.Muscle) Reflector.getInstance("net.barbux.creatures2d.Creature$Muscle");
    muscle.power = 2.0;
    muscle.maxLength = 2.0;
    muscle.period = 2.0;
    muscle.minLength = 2.0;
    muscle.expectedLength = 2.0;
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 2.0;
    Reflector.setField(node, "p", vector);
    Reflector.setField(muscle, "node1", node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 2.0;
    Reflector.setField(node1, "p", vector1);
    Reflector.setField(muscle, "node2", node1);
    arrayList2.add(muscle);
    Reflector.setField(creature, "allMuscles", arrayList2);
    creature.creatureId = 2;
    final GraphicsContext gc = PowerMockito.mock(GraphicsContext.class);
    final boolean showNumber = true;
    final Method fontMethod = DTUMemberMatcher.method(Font.class, "font", double.class);
    PowerMockito.doReturn(null).when(Font.class, fontMethod).withArguments(anyDouble());
    creature.render(gc, showNumber);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.2000000000313p+1 /* 2.25 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 2.0);
    Reflector.setField(node1, "size", 2.0);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.0000000000001p+9 /* 512.0 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 512.0;
    Reflector.setField(node2, "p", vector2);
    arrayList.add(node2);
    final Node node3 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node3, "originalPos", null);
    node3.nodeId = 2;
    node3.color = null;
    Reflector.setField(node3, "v", null);
    Reflector.setField(node3, "weight", 2.0);
    Reflector.setField(node3, "size", 2.0);
    final Vector vector3 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector3.y = 2.0;
    vector3.x = 0x1.2000000000001p+9 /* 576.0 */;
    Reflector.setField(node3, "p", vector3);
    arrayList.add(node3);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 16.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(2L);
    Assert.assertEquals(0x1.2000000000001p+9 /* 576.0 */, creature.maxReached, 0.0);
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid1() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 129.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(3L);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid2() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.ffffffffffffdp+9 /* 1024.0 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.0000000002p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 0x1.00000000002p+1 /* 2.0 */);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.ffffffffffffep+9 /* 1024.0 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 0x1.fffffffffffffp+9 /* 1024.0 */;
    Reflector.setField(node2, "p", vector2);
    arrayList.add(node2);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 0x1.ffffffffffffdp+1 /* 4.0 */;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(2L);
    Assert.assertEquals(0x1.fffffffffffffp+9 /* 1024.0 */, creature.maxReached, 0.0);
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid3() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 772.0;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 2.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(2L);
    Assert.assertEquals(772.0, creature.maxReached, 0.0);
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid4() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 177.0;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 960.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(2L);

    // The method returns void, testing that no exception is thrown
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid5() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 0x1.ffffffffffffep+9 /* 1024.0 */;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    final Node node1 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node1, "originalPos", null);
    node1.nodeId = 2;
    node1.color = null;
    Reflector.setField(node1, "v", null);
    Reflector.setField(node1, "weight", 0x1.0000000002p+1 /* 2.0 */);
    Reflector.setField(node1, "size", 0x1.00000000002p+1 /* 2.0 */);
    final Vector vector1 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector1.y = 2.0;
    vector1.x = 0x1.ffffffffffffep+9 /* 1024.0 */;
    Reflector.setField(node1, "p", vector1);
    arrayList.add(node1);
    final Node node2 = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node2, "originalPos", null);
    node2.nodeId = 2;
    node2.color = null;
    Reflector.setField(node2, "v", null);
    Reflector.setField(node2, "weight", 2.0);
    Reflector.setField(node2, "size", 2.0);
    final Vector vector2 = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector2.y = 2.0;
    vector2.x = 0x1.fffffffffffffp+9 /* 1024.0 */;
    Reflector.setField(node2, "p", vector2);
    arrayList.add(node2);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 0x1.ffffffffffffep+1 /* 4.0 */;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(2L);
    Assert.assertEquals(0x1.fffffffffffffp+9 /* 1024.0 */, creature.maxReached, 0.0);
  }

  @PrepareForTest(Physics.class)
  @Test
  public void updateInputPositiveOutputVoid6() throws Exception, InvocationTargetException {
    final Creature creature = new Creature();
    Reflector.setField(creature, "allBones", null);
    final Creature.NodeList nodeList = (Creature.NodeList) Reflector.getInstance("net.barbux.creatures2d.Creature$NodeList");
    Reflector.setField(nodeList, "this$0", null);
    final ArrayList<Node> arrayList = new ArrayList<Node>();
    final Node node = (Node) Reflector.getInstance("net.barbux.creatures2d.Creature$Node");
    Reflector.setField(node, "originalPos", null);
    node.nodeId = 2;
    node.color = null;
    Reflector.setField(node, "v", null);
    Reflector.setField(node, "weight", 2.0);
    Reflector.setField(node, "size", 2.0);
    final Vector vector = (Vector) Reflector.getInstance("net.barbux.creatures2d.Geometry$Vector");
    vector.y = 2.0;
    vector.x = 241.0;
    Reflector.setField(node, "p", vector);
    arrayList.add(node);
    Reflector.setField(nodeList, "internal", arrayList);
    Reflector.setField(creature, "allNodes", nodeList);
    final Physics physics = PowerMockito.mock(Physics.class);
    creature.physics = physics;
    creature.maxReached = 241.0;
    Reflector.setField(creature, "allMuscles", null);
    creature.creatureId = 2;
    creature.update(2L);

    // The method returns void, testing that no exception is thrown
  }

  @Test
  public void setExpectedLengthInputPositiveOutputVoid3() {
    final Node creature$Node = new Node(1.0, 1.0);
    final Node creature$Node1 = new Node(1.0, 1.0);
    final Creature.Bone thisObj = new Creature.Bone(creature$Node, creature$Node1);
    final double arg0 = 1.0;
    thisObj.setExpectedLength(arg0);

    // The method returns void, testing that no exception is thrown
  }
}
